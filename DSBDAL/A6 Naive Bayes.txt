###..
Implement Simple Naive Bayes classification alogrithm using Python/R on iris.csv dataset. Compute Confusion matrix to find TP, FP< TN, FN, Accuracy, Errorrate, Precision , Recal on the given dataset.
...###

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns




df=pd.read_csv("Iris.csv")
df



// checking for null values
df.isnull().sum()


//  Splitting the dataset into the Training set and Test set

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random state = 2)

// Feature Scaling

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
x_train = sc.fit_transform(x_train)
x_test = sc.transform(x_test)

// Training the Naive Bayes Classification model on the Training Set

from sklearn.naive_bayes import GaussianNB
classifier = GaussianNB()
classifier.fit(x_train, y_train)
GaussianNB()

// Predicting the Test set results

y_pred = classifier.predict(x_test) 
y_pred

// Confusion Matrix and Accuracy

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)
from sklearn.metrics import accuracy_score 
print ("Accuracy : ", accuracy_score(y_test, y_pred))
cm

// Comparing the Real Values with Predicted Values

df = pd.DataFrame({'Real Values':y_test, 'Predicted Values':y_pred})
df.head()

